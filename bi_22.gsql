SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY bi_22

CREATE QUERY bi_22(STRING country1Name, STRING country2Name) FOR GRAPH ldbc_snb { 
  TYPEDEF TUPLE<INT person1Id, INT person2Id, STRING city1Name, INT score> pairScore;
DATETIME start=now();
  SumAccum<STRING> @city1Name;
  OrAccum @p1, @p2;
  MapAccum<STRING, 
      GroupByAccum<INT person1Id, INT person2Id, OrAccum<bool> b1, OrAccum<bool> b2, 
          OrAccum<bool> b3, OrAccum<bool> b4, OrAccum<bool> b5>> @@pairScoreMap;
  SumAccum<INT> @@score;
  HeapAccum<pairScore>(1, score DESC, person1Id ASC, person2Id ASC) @@pairScoreGroupTop;
  HeapAccum<pairScore>(1, score DESC, person1Id ASC, person2Id ASC) @@pairScoreTop;

  // identify person1 and person2
  vCountry = { Country.* };
 vPersonAll = 
    SELECT t2
    FROM vCountry:s
        -(<Is_Part_Of:e1)-City:t1
        -(<Is_Located_In:e2)-Person:t2
    WHERE (s.name == country1Name OR s.name == country2Name)
    ACCUM
      CASE
        WHEN s.name == country1Name THEN
          t2.@city1Name = t1.name,
          t2.@p1 += True
        ELSE
          t2.@p2 += True
      END;
  acc12 =
    SELECT s
    FROM vPersonAll:s-(<Has_Creator.((Reply_Of>|Reply_Of>)).(Has_Creator>|Has_Creator>))-Person:t
    WHERE t.@p1 OR t.@p2
    ACCUM
      CASE
        WHEN s.@p1 AND t.@p2 THEN // case 1
          @@pairScoreMap += (s.@city1Name -> (s.id, t.id -> True, False, False, False, False))
        WHEN t.@p1 AND s.@p2 THEN // case 2
          @@pairScoreMap += (t.@city1Name -> (t.id, s.id -> False, True, False, False, False))
      END;

  acc3 =
    SELECT s
    FROM vPersonAll:s-((Knows):e)-Person:t
    WHERE t.@p1 OR t.@p2
    ACCUM 
      CASE
        WHEN s.@p1 AND t.@p2 THEN // case 3
          @@pairScoreMap += (s.@city1Name -> (s.id, t.id -> False, False, True, False, False))
        WHEN t.@p1 AND s.@p2 THEN // case 3
          @@pairScoreMap += (t.@city1Name -> (t.id, s.id -> False, False, True, False, False))
      END;

  acc45 =
    SELECT s
    FROM vPersonAll:s-((Likes>|Likes>).(Has_Creator>|Has_Creator>))-Person:t
    WHERE t.@p1 OR t.@p2
    ACCUM
      CASE
        WHEN s.@p1 AND t.@p2 THEN // case 4
          @@pairScoreMap += (s.@city1Name -> (s.id, t.id -> False, False, False, True, False))
        WHEN t.@p1 AND s.@p2 THEN // case 5
          @@pairScoreMap += (t.@city1Name -> (t.id, s.id -> False, False, False, False, True))
      END;

  @@pairScoreTop.resize(@@pairScoreMap.size());
  FOREACH (k,gba) IN @@pairScoreMap DO
    @@pairScoreGroupTop.clear();
    FOREACH (p1,p2,b1,b2,b3,b4,b5) IN gba DO
      @@score = 0;
      IF b1 THEN @@score += 4; END;
      IF b2 THEN @@score += 1; END;
      IF b3 THEN @@score += 15; END;
      IF b4 THEN @@score += 10; END;
      IF b5 THEN @@score += 1; END;
      @@pairScoreGroupTop += pairScore(p1, p2, k, @@score);
    END;
    @@pairScoreTop += @@pairScoreGroupTop.top();
  END;
DATETIME end1=now();
  FLOAT latency=datetime_diff(end1,start);
  INT throuput=@@pairScoreGroupTop.size()/(latency+1);
  PRINT latency;
  PRINT throuput;
  PRINT @@pairScoreTop;

}

// INSTALL QUERY bi_22
// RUN QUERY bi_22("Mexico","Indonesia")
SET query_timeout = 180000
INTERPRET QUERY bi_22("Mexico","Indonesia")
