USE GRAPH ldbc_snb
DROP QUERY ic_4
CREATE OR REPLACE QUERY ic_4(VERTEX<Person> personId, DATETIME startDate, INT durationDays) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<STRING tagName, INT postCount> topic;
DATETIME START=NOW();
  SumAccum<int> @postCount;
  SetAccum<VERTEX<Tag>> @@tagsFav, @@tagsExc;
  HeapAccum<topic>(10, postCount DESC, tagName ASC) @@topicTop;

  DATETIME endDate;
  endDate = DATETIME_add(startDate, INTERVAL durationDays DAY);

  PersonSeed = { personId };

  // find tags of posts created by the Person's friends in the given timeframe
  vTag =
    SELECT tgt
    FROM PersonSeed:src
        -((Knows))-Person:p
        -(<Has_Creator)-Post:msg
        -(Has_Tag>)-Tag:tgt
    ACCUM
      CASE
        WHEN msg.creation_date >= startDate AND msg.creation_date < endDate THEN
          tgt.@postCount += 1
        WHEN msg.creation_date < startDate THEN
          @@tagsExc += tgt
      END
    POST-ACCUM CASE WHEN tgt.@postCount > 0 THEN @@tagsFav += tgt END;

  @@tagsFav = @@tagsFav MINUS @@tagsExc;
  vTag = { @@tagsFav };

  // perform ordering on vTag
  vTag =
    SELECT src
    FROM vTag:src
    ACCUM @@topicTop += topic(src.name, src.@postCount);
DATETIME endDate1=NOW();
  FLOAT Latency=datetime_diff(endDate1,startDate);
  INT throuput=@@topicTop.size();
  PRINT throuput;
  PRINT Latency;
  PRINT (vTag.size()+PersonSeed.size()+@@tagsFav.size()+@@topicTop.size());
  PRINT @@topicTop;
}
INSTALL QUERY ic_4

RUN QUERY ic_4(21990232559429, "2012-05-01T00:00:00", 37)
