SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY bi_20

CREATE QUERY bi_20(SET<STRING> tagClassNames) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<STRING tagClassName, INT messageCount> tagInfo;
 DATETIME START=NOW();
  SetAccum<STRING> @visited;
  MapAccum<STRING, INT> @@tagInfoMap;
  HeapAccum<tagInfo>(100, messageCount DESC, tagClassName ASC) @@tagInfoTop;

  vTagClass = { Tag_Class.* };
  aggAll =
    SELECT t3
    FROM vTagClass:s
        -(<Is_Subclass_Of)-Tag_Class:t1
        -(<Has_Type:e2)-Tag:t2
        -((<Has_Tag|<Has_Tag):e3)-(Post|Comment):t3
    WHERE s.name IN tagClassNames
    ACCUM t3.@visited += s.name
    POST-ACCUM
      FOREACH tcName IN t3.@visited DO
        @@tagInfoMap += (tcName -> 1)
      END;

  FOREACH (key, value) IN @@tagInfoMap DO
    @@tagInfoTop += tagInfo(key, value);
  END;
  DATETIME endt=now();
  FLOAT latency=datetime_diff(endt,START);
  int throuput=aggAll.size();
  PRINT @@tagInfoTop;
  PRINT (vTagClass.size()+aggAll.size());
}

// INSTALL QUERY bi_20
// RUN QUERY bi_20(["Writer","Single","Country"])
SET query_timeout = 180000
INTERPRET QUERY bi_20(["Writer","Single","Country"])
SET syntax_version = "v2"
